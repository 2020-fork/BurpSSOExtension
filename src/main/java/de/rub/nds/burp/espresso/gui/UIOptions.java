/**
 * EsPReSSO - Extension for Processing and Recognition of Single Sign-On Protocols.
 * Copyright (C) 2015/ Tim Guenther and Christian Mainka
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 */
package de.rub.nds.burp.espresso.gui;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 * The options to control the extension.
 * @author Tim Guenther
 * @version 1.0
 */
public class UIOptions extends JPanel {
    private JFileChooser fc;
    
    private File schema, cert, privkey, pubkey;
    private File scriptOut, scriptIn;
    private File extLib, config;
    
    public static boolean samlBool=true;
    public static boolean openIDBool=true;
    public static boolean openID2Bool=true;
    public static boolean openIDConnectBool=true;
    public static boolean browserIDBool=true;
    public static boolean oAuthv1Bool=true;
    public static boolean oAuthv2Bool=true;
    
    

    /**
     * Creates new form UIOptions
     */
    public UIOptions() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane = new javax.swing.JScrollPane();
        scrollPanel = new javax.swing.JPanel();
        ssoSeparator1 = new javax.swing.JSeparator();
        ssoLabel1 = new javax.swing.JLabel();
        openID1 = new javax.swing.JCheckBox();
        openIDConnect1 = new javax.swing.JCheckBox();
        oAuthv1 = new javax.swing.JCheckBox();
        oAuthv2 = new javax.swing.JCheckBox();
        browserID1 = new javax.swing.JCheckBox();
        saml1 = new javax.swing.JCheckBox();
        cryptoSeparator1 = new javax.swing.JSeparator();
        cryptoLabel1 = new javax.swing.JLabel();
        schemaLabel1 = new javax.swing.JLabel();
        schemaText1 = new javax.swing.JTextField();
        schemaOpen1 = new javax.swing.JButton();
        certLabel1 = new javax.swing.JLabel();
        certText1 = new javax.swing.JTextField();
        certOpen1 = new javax.swing.JButton();
        privKeyLabel1 = new javax.swing.JLabel();
        privKeyText1 = new javax.swing.JTextField();
        privKeyOpen1 = new javax.swing.JButton();
        pubKeyLabel1 = new javax.swing.JLabel();
        pubKeyText1 = new javax.swing.JTextField();
        pubKeyOpen1 = new javax.swing.JButton();
        scriptingSeperator1 = new javax.swing.JSeparator();
        scriptingLabel1 = new javax.swing.JLabel();
        scriptingDescription1 = new javax.swing.JLabel();
        scriptInLabel1 = new javax.swing.JLabel();
        scriptInText1 = new javax.swing.JTextField();
        scriptInOpen1 = new javax.swing.JButton();
        scriptOutLabel1 = new javax.swing.JLabel();
        scriptOutText1 = new javax.swing.JTextField();
        scriptOutOpen1 = new javax.swing.JButton();
        extLibSeparator1 = new javax.swing.JSeparator();
        extLibLabel1 = new javax.swing.JLabel();
        libLabel1 = new javax.swing.JLabel();
        libText1 = new javax.swing.JTextField();
        libOpen1 = new javax.swing.JButton();
        saveConfSeparator1 = new javax.swing.JSeparator();
        saveConfLabel1 = new javax.swing.JLabel();
        configLabel1 = new javax.swing.JLabel();
        configText1 = new javax.swing.JTextField();
        configOpen1 = new javax.swing.JButton();
        configSave1 = new javax.swing.JButton();
        configApply1 = new javax.swing.JButton();

        ssoLabel1.setText("Active SSO Protocols");

        openID1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        openID1.setSelected(true);
        openID1.setText("OpenID");
        openID1.setToolTipText("Disable/Enable OpenID");
        openID1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openID1ActionPerformed(evt);
            }
        });

        openIDConnect1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        openIDConnect1.setSelected(true);
        openIDConnect1.setText("OpenID Connect");
        openIDConnect1.setToolTipText("Disable/Enable OpenID Connect");

        oAuthv1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        oAuthv1.setSelected(true);
        oAuthv1.setText("OAuth v1.0");
        oAuthv1.setToolTipText("Disable/Enable OAuth v1.0");
        oAuthv1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oAuthv1ActionPerformed(evt);
            }
        });

        oAuthv2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        oAuthv2.setSelected(true);
        oAuthv2.setText("OAuth v2.0");
        oAuthv2.setToolTipText("Disable/Enable OAuth v2.0");
        oAuthv2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oAuthv2ActionPerformed(evt);
            }
        });

        browserID1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        browserID1.setSelected(true);
        browserID1.setText("BrowserID");
        browserID1.setToolTipText("Disable/Enable BrowserID");
        browserID1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browserID1ActionPerformed(evt);
            }
        });

        saml1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        saml1.setSelected(true);
        saml1.setText("SAML");
        saml1.setToolTipText("Disable/Enable SAML");
        saml1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saml1ActionPerformed(evt);
            }
        });

        cryptoLabel1.setText("Cryptography");

        schemaLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        schemaLabel1.setText("Schema:");

        schemaText1.setToolTipText("Insert a path to a schema file.");
        schemaText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schemaText1ActionPerformed(evt);
            }
        });

        schemaOpen1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        schemaOpen1.setText("...");
        schemaOpen1.setToolTipText("open file");
        schemaOpen1.setMargin(new java.awt.Insets(0, 10, 0, 10));
        schemaOpen1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schemaOpen1ActionPerformed(evt);
            }
        });

        certLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        certLabel1.setText("Certificat:");

        certText1.setToolTipText("Insert a path to a certificat file.");
        certText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                certText1ActionPerformed(evt);
            }
        });

        certOpen1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        certOpen1.setText("...");
        certOpen1.setToolTipText("open file");
        certOpen1.setMargin(new java.awt.Insets(0, 10, 0, 10));
        certOpen1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                certOpen1ActionPerformed(evt);
            }
        });

        privKeyLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        privKeyLabel1.setText("Private Key:");

        privKeyText1.setToolTipText("Insert a path to a private key file.");
        privKeyText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                privKeyText1ActionPerformed(evt);
            }
        });

        privKeyOpen1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        privKeyOpen1.setText("...");
        privKeyOpen1.setToolTipText("open file");
        privKeyOpen1.setMargin(new java.awt.Insets(0, 10, 0, 10));
        privKeyOpen1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                privKeyOpen1ActionPerformed(evt);
            }
        });

        pubKeyLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        pubKeyLabel1.setText("Public Key:");

        pubKeyText1.setToolTipText("Insert a path to a public key file.");
        pubKeyText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pubKeyText1ActionPerformed(evt);
            }
        });

        pubKeyOpen1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        pubKeyOpen1.setText("...");
        pubKeyOpen1.setToolTipText("open file");
        pubKeyOpen1.setMargin(new java.awt.Insets(0, 10, 0, 10));
        pubKeyOpen1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pubKeyOpen1ActionPerformed(evt);
            }
        });

        scriptingLabel1.setText("Scripting");

        scriptingDescription1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        scriptingDescription1.setText("The scripts are used as an interface to external attacking or processing libraries.");

        scriptInLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        scriptInLabel1.setText("Input Processing Script:");

        scriptInText1.setToolTipText("Insert a path to a python script.");
        scriptInText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scriptInText1ActionPerformed(evt);
            }
        });

        scriptInOpen1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        scriptInOpen1.setText("...");
        scriptInOpen1.setToolTipText("open file");
        scriptInOpen1.setMargin(new java.awt.Insets(0, 10, 0, 10));
        scriptInOpen1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scriptInOpen1ActionPerformed(evt);
            }
        });

        scriptOutLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        scriptOutLabel1.setText("Output Processing Script:");

        scriptOutText1.setToolTipText("Insert a path to a python script.");

        scriptOutOpen1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        scriptOutOpen1.setText("...");
        scriptOutOpen1.setToolTipText("open file");
        scriptOutOpen1.setMargin(new java.awt.Insets(0, 10, 0, 10));
        scriptOutOpen1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scriptOutOpen1ActionPerformed(evt);
            }
        });

        extLibLabel1.setText("External Libraries");

        libLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        libLabel1.setText("Libraries:");

        libText1.setToolTipText("Insert a path to a .jar file.");
        libText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                libText1ActionPerformed(evt);
            }
        });

        libOpen1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        libOpen1.setText("...");
        libOpen1.setToolTipText("open file");
        libOpen1.setMargin(new java.awt.Insets(0, 10, 0, 10));
        libOpen1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                libOpen1ActionPerformed(evt);
            }
        });

        saveConfLabel1.setText("Save Configurations");

        configLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        configLabel1.setText("Config file:");

        configText1.setToolTipText("Save the extension configuration.");
        configText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                configText1ActionPerformed(evt);
            }
        });

        configOpen1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        configOpen1.setText("...");
        configOpen1.setToolTipText("open file");
        configOpen1.setMargin(new java.awt.Insets(0, 10, 0, 10));
        configOpen1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                configOpen1ActionPerformed(evt);
            }
        });

        configSave1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        configSave1.setText("save");
        configSave1.setToolTipText("Save all data to the configuration file.");
        configSave1.setMargin(new java.awt.Insets(0, 14, 0, 14));
        configSave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                configSave1ActionPerformed(evt);
            }
        });

        configApply1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        configApply1.setText("apply");
        configApply1.setMargin(new java.awt.Insets(0, 14, 0, 14));
        configApply1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                configApply1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout scrollPanelLayout = new javax.swing.GroupLayout(scrollPanel);
        scrollPanel.setLayout(scrollPanelLayout);
        scrollPanelLayout.setHorizontalGroup(
            scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 754, Short.MAX_VALUE)
            .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(scrollPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, scrollPanelLayout.createSequentialGroup()
                            .addGap(534, 534, 534)
                            .addComponent(configApply1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(configSave1))
                        .addGroup(scrollPanelLayout.createSequentialGroup()
                            .addComponent(ssoLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ssoSeparator1))
                        .addGroup(scrollPanelLayout.createSequentialGroup()
                            .addComponent(cryptoLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cryptoSeparator1))
                        .addGroup(scrollPanelLayout.createSequentialGroup()
                            .addComponent(scriptingLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(scriptingSeperator1))
                        .addGroup(scrollPanelLayout.createSequentialGroup()
                            .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(openIDConnect1)
                                .addComponent(openID1))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(scrollPanelLayout.createSequentialGroup()
                                    .addComponent(oAuthv1)
                                    .addGap(18, 18, 18)
                                    .addComponent(browserID1))
                                .addGroup(scrollPanelLayout.createSequentialGroup()
                                    .addComponent(oAuthv2)
                                    .addGap(18, 18, 18)
                                    .addComponent(saml1)))
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(scrollPanelLayout.createSequentialGroup()
                            .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(certLabel1)
                                .addComponent(schemaLabel1)
                                .addComponent(privKeyLabel1)
                                .addComponent(pubKeyLabel1))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(certText1)
                                .addComponent(schemaText1)
                                .addComponent(privKeyText1)
                                .addComponent(pubKeyText1))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(schemaOpen1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(certOpen1, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addComponent(privKeyOpen1)
                                .addComponent(pubKeyOpen1)))
                        .addGroup(scrollPanelLayout.createSequentialGroup()
                            .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(scriptOutLabel1)
                                .addComponent(scriptInLabel1))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(scriptOutText1)
                                .addComponent(scriptInText1))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(scriptInOpen1, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(scriptOutOpen1, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addComponent(scriptingDescription1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(scrollPanelLayout.createSequentialGroup()
                            .addComponent(extLibLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(extLibSeparator1))
                        .addGroup(scrollPanelLayout.createSequentialGroup()
                            .addComponent(configLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(configText1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(configOpen1))
                        .addGroup(scrollPanelLayout.createSequentialGroup()
                            .addComponent(libLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(libText1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(libOpen1))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, scrollPanelLayout.createSequentialGroup()
                            .addComponent(saveConfLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(saveConfSeparator1)))
                    .addContainerGap()))
        );
        scrollPanelLayout.setVerticalGroup(
            scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 470, Short.MAX_VALUE)
            .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(scrollPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(ssoLabel1)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, scrollPanelLayout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(ssoSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(browserID1)
                        .addComponent(oAuthv1)
                        .addComponent(openID1))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(openIDConnect1)
                        .addComponent(oAuthv2)
                        .addComponent(saml1))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(cryptoLabel1)
                        .addComponent(cryptoSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(schemaLabel1)
                        .addComponent(schemaText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(schemaOpen1))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(certLabel1)
                        .addComponent(certText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(certOpen1))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(privKeyLabel1)
                        .addComponent(privKeyText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(privKeyOpen1))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pubKeyLabel1)
                        .addComponent(pubKeyText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pubKeyOpen1))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(scriptingLabel1)
                        .addComponent(scriptingSeperator1, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(scriptingDescription1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(scriptInLabel1)
                        .addComponent(scriptInText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(scriptInOpen1))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(scriptOutLabel1)
                        .addComponent(scriptOutText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(scriptOutOpen1))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(extLibLabel1)
                        .addComponent(extLibSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(libLabel1)
                        .addComponent(libText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(libOpen1))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(saveConfSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(saveConfLabel1))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(configLabel1)
                        .addComponent(configText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(configOpen1))
                    .addGap(18, 18, 18)
                    .addGroup(scrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(configApply1)
                        .addComponent(configSave1))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jScrollPane.setViewportView(scrollPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void openID1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openID1ActionPerformed
        openIDBool = openID1.isSelected();
    }//GEN-LAST:event_openID1ActionPerformed

    private void browserID1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browserID1ActionPerformed
        browserIDBool = browserID1.isSelected();
    }//GEN-LAST:event_browserID1ActionPerformed

    private void saml1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saml1ActionPerformed
        samlBool = saml1.isSelected();
    }//GEN-LAST:event_saml1ActionPerformed

    private void schemaText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schemaText1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_schemaText1ActionPerformed

    private void schemaOpen1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schemaOpen1ActionPerformed
        fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            schema = fc.getSelectedFile();
            schemaText1.setText(schema.getPath());
        } else {
            JOptionPane.showMessageDialog(this,"The selected file could not be found","File not found",JOptionPane.ERROR_MESSAGE);
            schemaText1.setText("File not found");
        }
    }//GEN-LAST:event_schemaOpen1ActionPerformed

    private void certText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_certText1ActionPerformed
        
    }//GEN-LAST:event_certText1ActionPerformed

    private void privKeyText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_privKeyText1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_privKeyText1ActionPerformed

    private void privKeyOpen1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_privKeyOpen1ActionPerformed
        fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            privkey = fc.getSelectedFile();
            privKeyText1.setText(privkey.getPath());
        } else {
            JOptionPane.showMessageDialog(this,"The selected file could not be found","File not found",JOptionPane.ERROR_MESSAGE);
            privKeyText1.setText("File not found");
        }
    }//GEN-LAST:event_privKeyOpen1ActionPerformed

    private void pubKeyText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pubKeyText1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pubKeyText1ActionPerformed

    private void pubKeyOpen1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pubKeyOpen1ActionPerformed
        fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
           pubkey = fc.getSelectedFile();
           pubKeyText1.setText(pubkey.getPath());
        } else {
            JOptionPane.showMessageDialog(this,"The selected file could not be found","File not found",JOptionPane.ERROR_MESSAGE);
            pubKeyText1.setText("File not found");
        }
    }//GEN-LAST:event_pubKeyOpen1ActionPerformed

    private void scriptInText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scriptInText1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_scriptInText1ActionPerformed

    private void scriptInOpen1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scriptInOpen1ActionPerformed
        fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
           scriptIn = fc.getSelectedFile();
           scriptInText1.setText(scriptIn.getPath());
        } else {
            JOptionPane.showMessageDialog(this,"The selected file could not be found","File not found",JOptionPane.ERROR_MESSAGE);
            scriptInText1.setText("File not found");
        }
    }//GEN-LAST:event_scriptInOpen1ActionPerformed

    private void libText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_libText1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_libText1ActionPerformed

    private void libOpen1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_libOpen1ActionPerformed
        fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
           extLib = fc.getSelectedFile();
           libText1.setText(extLib.getPath());
        } else {
            JOptionPane.showMessageDialog(this,"The selected file could not be found","File not found",JOptionPane.ERROR_MESSAGE);
            libText1.setText("File not found");
        }
    }//GEN-LAST:event_libOpen1ActionPerformed

    private void configText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_configText1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_configText1ActionPerformed

    private void configOpen1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_configOpen1ActionPerformed
        fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
           config = fc.getSelectedFile();
           configText1.setText(config.getPath());
        } else {
            JOptionPane.showMessageDialog(this,"The selected file could not be found","File not found",JOptionPane.ERROR_MESSAGE);
            configText1.setText("File not found");
        }
    }//GEN-LAST:event_configOpen1ActionPerformed

    private void configSave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_configSave1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_configSave1ActionPerformed

    private void configApply1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_configApply1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_configApply1ActionPerformed

    private void certOpen1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_certOpen1ActionPerformed
        fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
           cert = fc.getSelectedFile();
           certText1.setText(cert.getPath());
        } else {
            JOptionPane.showMessageDialog(this,"The selected file could not be found","File not found",JOptionPane.ERROR_MESSAGE);
            certText1.setText("File not found");
        }
    }//GEN-LAST:event_certOpen1ActionPerformed

    private void scriptOutOpen1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scriptOutOpen1ActionPerformed
        fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
           scriptOut = fc.getSelectedFile();
           scriptOutText1.setText(scriptOut.getPath());
        } else {
            JOptionPane.showMessageDialog(this,"The selected file could not be found","File not found",JOptionPane.ERROR_MESSAGE);
            scriptOutText1.setText("File not found");
        }
    }//GEN-LAST:event_scriptOutOpen1ActionPerformed

    private void oAuthv1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oAuthv1ActionPerformed
        oAuthv1Bool = oAuthv1.isSelected();
    }//GEN-LAST:event_oAuthv1ActionPerformed

    private void oAuthv2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oAuthv2ActionPerformed
        oAuthv2Bool = oAuthv2.isSelected();
    }//GEN-LAST:event_oAuthv2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox browserID1;
    private javax.swing.JLabel certLabel1;
    private javax.swing.JButton certOpen1;
    private javax.swing.JTextField certText1;
    private javax.swing.JButton configApply1;
    private javax.swing.JLabel configLabel1;
    private javax.swing.JButton configOpen1;
    private javax.swing.JButton configSave1;
    private javax.swing.JTextField configText1;
    private javax.swing.JLabel cryptoLabel1;
    private javax.swing.JSeparator cryptoSeparator1;
    private javax.swing.JLabel extLibLabel1;
    private javax.swing.JSeparator extLibSeparator1;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JLabel libLabel1;
    private javax.swing.JButton libOpen1;
    private javax.swing.JTextField libText1;
    private javax.swing.JCheckBox oAuthv1;
    private javax.swing.JCheckBox oAuthv2;
    private javax.swing.JCheckBox openID1;
    private javax.swing.JCheckBox openIDConnect1;
    private javax.swing.JLabel privKeyLabel1;
    private javax.swing.JButton privKeyOpen1;
    private javax.swing.JTextField privKeyText1;
    private javax.swing.JLabel pubKeyLabel1;
    private javax.swing.JButton pubKeyOpen1;
    private javax.swing.JTextField pubKeyText1;
    private javax.swing.JCheckBox saml1;
    private javax.swing.JLabel saveConfLabel1;
    private javax.swing.JSeparator saveConfSeparator1;
    private javax.swing.JLabel schemaLabel1;
    private javax.swing.JButton schemaOpen1;
    private javax.swing.JTextField schemaText1;
    private javax.swing.JLabel scriptInLabel1;
    private javax.swing.JButton scriptInOpen1;
    private javax.swing.JTextField scriptInText1;
    private javax.swing.JLabel scriptOutLabel1;
    private javax.swing.JButton scriptOutOpen1;
    private javax.swing.JTextField scriptOutText1;
    private javax.swing.JLabel scriptingDescription1;
    private javax.swing.JLabel scriptingLabel1;
    private javax.swing.JSeparator scriptingSeperator1;
    private javax.swing.JPanel scrollPanel;
    private javax.swing.JLabel ssoLabel1;
    private javax.swing.JSeparator ssoSeparator1;
    // End of variables declaration//GEN-END:variables
}
